#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const walk = require('walk')
const chalk = require('chalk')

/**
 * Verify that built files are small enough to be gzipped on the CDN and
 * surface some useful information from the HTML and JSON reports generated by Lighthouse
 */

let fileName
let failure = false

if (fs.existsSync('lighthouse/audit-local.report.html')) {
    fileName = 'audit-local'
} else if (fs.existsSync('lighthouse/audit-prod.report.html')){
    fileName = 'audit-prod'
} else {
    console.log('Error Lighthouse report not found.')
    process.exit(0);
}

/**
* Traverse the build folder and verify the bundle size. CDN will not compress 
* files larger than 2MB.
*/
let options = {
    listeners: {
        file: function (root, fileStats, next) {
            let filePath = path.join(root, fileStats.name)
            let fileStat = fs.statSync(filePath)
            if (fileStat.size > 2000000) {
                failure = true
                console.log(chalk.red(`${filePath} is ${fileStat.size} bytes. It must be less than 2MB to get gzipped on the CDN.`))
            }
            next()
        },
        errors: function (root, nodeStatsArray, next) {
            next();
        }
    }
}

if (fs.existsSync('build')) {
    console.log(`Verifying individual file sizes in the build...`)
    walk.walkSync('build', options);
} else {
    console.log(`Run 'npm prod:build' to generate a build.`)
}

/**
* Verify the Lighthouse score
*/
const checkLighthouse = function(htmlReport) {
    // Still needed because JSON report does not have overall score.
    // I confirm that I read & accept http://stackoverflow.com/a/1732454/899937
    const results = htmlReport.match(/<span class="section-result__points">(.*)<\/span>/)

    const actualLighthouseScore = parseInt(results[1])
    // min_lighthouse_score can be adjusted in CI
    const minimumLighthouseScore = parseInt(process.env.min_lighthouse_score || process.env.npm_package_config_min_lighthouse_score)

    if (actualLighthouseScore < minimumLighthouseScore) {
        console.error(chalk.red(`Lighthouse score is lower than required! ${actualLighthouseScore} < ${minimumLighthouseScore}`))
        failure = true
    } else {
        console.log(`Lighthouse score is fine (${actualLighthouseScore})`)
    }
}

/**
* Display some important performance metrics.
*/
const checkTTI = function(jsonResults) {
    console.log(`Time to interactive: ${jsonResults.audits['time-to-interactive'].displayValue}`)
    console.log(`Analyzing total bundle size...`)
    console.log(`${jsonResults.audits['total-byte-weight'].displayValue}`)
}

const jsonResults = JSON.parse(fs.readFileSync(`lighthouse/${fileName}.report.json`, 'utf8'))
const htmlReport = fs.readFileSync(`lighthouse/${fileName}.report.html`, 'utf8')

checkTTI(jsonResults)
checkLighthouse(htmlReport)

if (failure) {
    process.exit(1)
} else {
    process.exit(0)
}
