version: 2
references:

  container_config: &container_config
    docker:
      - image: mobify/cci-docker-primary:0.1.0
    working_directory: /home/ubuntu/lancome/

  repo_cache_key: &repo_cache_key
    lancome-repo-{{ .Branch }}-{{ .Revision }}

  npm_cache_key: &npm_cache_key
    lancome-npm-{{ .Branch }}-{{ checksum "web/package.json" }}

  build_cache_key: &build_cache_key
    lancome-build-{{ .Branch }}-{{ checksum ".circle-sha" }}
  
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key

  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key
  
  restore_build: &restore_build
    restore_cache:
      keys:
        - *build_cache_key

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: *repo_cache_key
          paths:
            - .
      - restore_cache:
          key: *npm_cache_key
          paths:
            - /home/ubuntu/lancome/web/node_modules
      - run:
          name: Install Dependencies
          command: npm install
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Build Project
          command: npm run prod:build
          working_directory: /home/ubuntu/lancome/web/
      - save_cache:
          key: *npm_cache_key
          paths:
            - /home/ubuntu/lancome/web/node_modules 
      - save_cache:
          key: *build_cache_key
          paths:
            - /home/ubuntu/lancome/web/build

  test-lint:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *restore_build
      - run:
          name: Run Lint Tests
          command: npm run lint
          working_directory: /home/ubuntu/lancome/web/

  test-guest-checkout:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *restore_build
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/lancome/web/
      - run: 
          name: Run end2end Test
          command: xvfb-run -a npm run test:e2e --tests tests/e2e/workflows/guest-checkout.js
          when: always
          working_directory: /home/ubuntu/lancome/web/
      - store_artifacts:
          path: web/tests/reports/
          when: always
      - store_artifacts:
          path: web/tests/screenshots/
          when: always
  
  test-registered-checkout:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *restore_build
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/lancome/web/
      - run: 
          name: Run end2end Test
          command: xvfb-run -a npm run test:e2e --tests tests/e2e/workflows/registered-checkout.js
          when: always
          working_directory: /home/ubuntu/lancome/web/
      - store_artifacts:
          path: web/tests/reports/
          when: always
      - store_artifacts:
          path: web/tests/screenshots/
          when: always
  
  test-paypal-checkout:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *restore_build
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/lancome/web/
      - run: 
          name: Run end2end Test
          command: xvfb-run -a npm run test:e2e --tests tests/e2e/workflows/paypal-checkout.js
          when: always
          working_directory: /home/ubuntu/lancome/web/
      - store_artifacts:
          path: web/tests/reports/
          when: always
      - store_artifacts:
          path: web/tests/screenshots/
          when: always

  test-shoprunner-checkout:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *restore_build
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/lancome/web/
      - run: 
          name: Run end2end Test
          command: xvfb-run -a npm run test:e2e --tests tests/e2e/workflows/shoprunner-checkout.js
          when: always
          working_directory: /home/ubuntu/lancome/web/
      - store_artifacts:
          path: web/tests/reports/
          when: always
      - store_artifacts:
          path: web/tests/screenshots/
          when: always

  test-lighthouse:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_node_modules
      - *restore_build
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/lancome/web/
      - run:
          name: Verifying if files are under 2mb
          command: npm run test:build-size
          working_directory: /home/ubuntu/lancome/web/
      - run: 
          name: Run Lighthouse
          command: xvfb-run -a npm run test:pwa-preview
          when: always
          working_directory: /home/ubuntu/lancome/web/
      - store_artifacts:
          path: web/tests/performance/lighthouse/reports/
          when: always

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
      - test-lint:
          requires:
            - build
      - test-guest-checkout:
          requires:
            - build
      - test-paypal-checkout:
          requires:
            - build
      - test-shoprunner-checkout:
          requires:
            - build
      - test-lighthouse:
          requires:
            - build