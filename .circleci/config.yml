version: 2
references:

  container_config: &container_config
    docker:
      - image: mobify/cci-docker-primary:0.1.0
    working_directory: /home/ubuntu/platform-scaffold/

  npm_cache_key: &npm_cache_key
    platform-scaffold-{{ .Branch }}-{{ checksum "web/package.json" }}

  npm_cache_key: &npm_cache_key
    platform-scaffold-build-{{ .Branch }}
  
  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *npm_cache_key

  restore_build: &restore_build
    restore_cache:
      keys:
        - *build_cache_key

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - *restore_node_modules
      - run:
          name: Install Dependencies
          command: npm install
          working_directory: /home/ubuntu/platform-scaffold/web/
      - save_cache:
          key: *npm_cache_key
          paths:
            - /home/ubuntu/platform-scaffold/web/node_modules
      - save_cache:
          key: *build_cache_key
          paths:
            - /home/ubuntu/platform-scaffold/web/build

  test-unit:
    <<: *container_config
    steps:
      - checkout
      - *restore_node_modules
      - run:
          name: Lint
          command: pwd && npm run lint
          working_directory: /home/ubuntu/platform-scaffold/web/ 
      - run:
          name: Run Unit Tests
          command: npm test -- --runInBand
          working_directory: /home/ubuntu/platform-scaffold/web/
  
  test-e2e:
    <<: *container_config
    parallelism: 2
    steps:
      - checkout
      - *restore_node_modules
      - *restore_build
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/platform-scaffold/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/platform-scaffold/web/
      - run: 
          name: Run end2end Test
          command: xvfb-run -a ./tests/e2e/test-scripts/run-e2e-in-parallel.sh
          when: always
          working_directory: /home/ubuntu/platform-scaffold/web/
      - store_artifacts:
          path: web/tests/reports/
          when: always
      - store_artifacts:
          path: web/tests/screenshots/
          when: always
      
  test-performance:
    <<: *container_config
    steps:
      - checkout
      - *restore_node_modules
      - *restore_build
      - run:
          name: Build Project
          command: npm run prod:build
          background: true
          working_directory: /home/ubuntu/platform-scaffold/web/
      - run:
          name: Start Test Server
          command: npm run test:server
          background: true
          working_directory: /home/ubuntu/platform-scaffold/web/
      - run:
          name: Wait for Server
          command: bash ./scripts/wait-for-dependencies.sh
          working_directory: /home/ubuntu/platform-scaffold/web/
      - run:
          name: Accept Cert
          command: bash ./scripts/accept-cert-ci.sh
          working_directory: /home/ubuntu/platform-scaffold/web/ 
      - run:
          name: Analyzing Build Size
          command: npm run test:max-file-size -- build tests/performance/gzip-size-config.json
          working_directory: /home/ubuntu/platform-scaffold/web/
      - run:
          name: Lighthouse Tests
          command: xvfb-run -a npm run test:pwa-preview
          when: always
          working_directory: /home/ubuntu/platform-scaffold/web/
      - store_artifacts:
          path: web/tests/performance/lighthouse/reports/
          when: always

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test-unit:
          requires:
            - build
      - test-e2e:
          requires:
            - build
      - test-performance:
          requires:
            - build